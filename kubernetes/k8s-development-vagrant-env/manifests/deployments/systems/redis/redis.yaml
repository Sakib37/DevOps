# see https://www.techandme.se/performance-tips-for-redis-cache-server/
kind: ConfigMap
apiVersion: v1
metadata:
  name: redis-cluster-config
data:
  master.conf: |
    bind 0.0.0.0
    port 6379

    dir /redis-data

  slave.conf: |
    bind 0.0.0.0
    port 6379

    dir .

    slaveof redis-0.redis 6379

  sentinel.conf: |
    bind 0.0.0.0
    port 26379

    sentinel monitor redis redis-0.redis 6379 2
    sentinel parallel-syncs redis 1
    sentinel down-after-milliseconds redis 10000
    sentinel failover-timeout redis 20000

  init.sh: |
    #!/bin/bash

    if [[ "${HOSTNAME}" == "redis-0" ]]
    then
      redis-server /redis-config/master.conf
    else
      redis-server /redis-config/slave.conf
    fi

  sentinel.sh: |
    #!/bin/bash

    while ! ping -c 1 redis-0.redis
    do
      echo "waiting for server"
      sleep 1
    done

    redis-sentinel /redis-config/sentinel.conf
---
kind: Service
apiVersion: v1
metadata:
  name: redis
spec:
  clusterIP: None
  selector:
    app: redis
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: redis
  namespace: default
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: redis
  labels:
    app: redis
  annotations:
    sidecar.istio.io/inject: "false"
spec:
  selector:
    matchLabels:
      app: redis
  serviceName: redis
  replicas: 3
  revisionHistoryLimit: 150
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: redis
        version: 3.2.7
    spec:
      terminationGracePeriodSeconds: 60
      volumes:
        - name: redis-cluster-config
          configMap:
            name: redis-cluster-config
      containers:
        - name: redis
          image: redis:3.2.7-alpine
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - /redis-config/init.sh
          ports:
            - name: redis
              containerPort: 6379
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            periodSeconds: 2
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 10
            periodSeconds: 2
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
            limits:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: redis-cluster-config
              mountPath: /redis-config
            - name: redis-volume
              mountPath: /redis-data
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
        - name: redis-sentinel
          image: redis:3.2.7-alpine
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - /redis-config/sentinel.sh
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: redis-cluster-config
              mountPath: /redis-config
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
  volumeClaimTemplates:
    - metadata:
        name: redis-volume
        labels:
          volume: redis
      spec:
        storageClassName: rook-block
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
          limits:
            storage: 5Gi


